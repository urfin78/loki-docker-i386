name: Docker image build

on:
  pull_request:
    types: [ closed ]

jobs:
  build-latest:
    if: github.event.pull_request.merged == true
    id: build-latest-image
    name: Build latest Image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64, 386]

    steps:
    - uses: actions/checkout@v2

    - name: Prepare multiarch
      run: sudo podman run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Build latest image
      uses: redhat-actions/buildah-build@v2
      with:
        image: loki
        archs: ${{ matrix.arch }}
        tags: latest-${{ matrix.arch }}
        dockerfiles: |
          ./Dockerfile
        build-args: |
          VERSION=master
          GOARCH=${{ matrix.arch }}

    - name: Push to ghcr
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-latest-image.outputs.image }}
        tags: ${{ steps.build-latest-image.outputs.tags }}
        registry: ghcr.io/${{ github.repository_owner }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
      if: env.VERSION != env.AVAIL
    
  build-version:
    if: github.event.pull_request.merged == true
    name: Build Version Image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64, 386]

    steps:
    - uses: actions/checkout@v2
    
    - name: Get latest Loki release
      run: |
        export LOKI_LATEST=$(curl -s "https://api.github.com/repos/grafana/loki/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')
        echo "VERSION=$LOKI_LATEST" >> ${GITHUB_ENV}
      shell: bash

    - name: Compare release with already pushed version
      run: |
        export LOKI_AVAIL=$(curl -s "https://hub.docker.com/v2/repositories/urfin78/loki-i386/tags/"|grep -Po "$VERSION")
        echo "AVAIL=$LOKI_AVAIL" >> ${GITHUB_ENV}

    - name: Prepare multiarch
      run: sudo podman run --rm --privileged multiarch/qemu-user-static --reset -p yes
      if: env.VERSION != env.AVAIL

    - name: Build version image
      id: build-version-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: loki
        archs: ${{ matrix.arch }}
        tags: ${{ env.VERSION }}-${{ matrix.arch }}
        dockerfiles: |
          ./Dockerfile
        build-args: |
          VERSION=${{ env.VERSION }}
          GOARCH=${{ matrix.arch }}
      if: env.VERSION != env.AVAIL
    
    - name: Push to ghcr
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-version-image.outputs.image }}
        tags: ${{ steps.build-version-image.outputs.tags }}
        registry: ghcr.io/${{ github.repository_owner }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
      if: env.VERSION != env.AVAIL